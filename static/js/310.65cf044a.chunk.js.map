{"version":3,"file":"static/js/310.65cf044a.chunk.js","mappings":"+OAEaA,E,OAAMC,GAAAA,IAAH,gqC,2BCqDhB,EAhDe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAAY,GACrCC,GAAWC,EAAAA,EAAAA,MAqBjB,OAZAC,EAAAA,EAAAA,YAAU,WACHJ,IAILK,EAAAA,EAAAA,IAAUL,GAAOM,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QAC/BX,EAAUW,EACX,GACF,GAAE,CAACP,IAEJS,QAAQC,IAAI,iBAAkBf,IAG5B,UAACH,EAAD,YACE,kBAAMmB,SArBW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAASF,EAAEG,OAAOC,SAASC,MAAMC,MACvCnB,EAA2B,KAAXe,EAAgB,CAAEd,MAAOc,GAAW,CAAC,EACtD,EAgBG,WACE,kBAAOK,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,UACE,SAAC,MAAD,UAIJ,wBACGxB,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMzB,GAA1C,WACE,gBAAK0B,KAAKC,EAAAA,EAAAA,GAAOL,GAAcM,IAAKP,KACpC,wBAAKA,QAHAD,EADC,QAWnB,C,oKCnDKS,EAAU,gCACVC,EAAU,2CAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA0CC,GAClD,EAEYG,EAAe,SAAAb,GAC1B,OAAOY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BT,EAA7B,YAAmCU,GAC3C,EAEYI,EAAkB,SAAAd,GAC7B,OAAOY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BT,EAA7B,oBAA2CU,GACnD,EAEYK,EAAe,SAAAf,GAC1B,OAAOY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BT,EAA7B,oBAA2CU,GACnD,EAEY3B,EAAY,SAAAL,GACvB,OAAOkC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAAoCC,EAApC,kBAAqDhC,GAC7D,C,sDCrBM,SAAS6B,EAAOP,GACrB,OAAOA,EAAE,UAHM,mCAGN,OACSA,GACd,6FACL,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/API.js","utils/imageHref.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n\n  form {\n    position: relative;\n  }\n\n  input {\n    width: 600px;\n    border-radius: 10px;\n    border: 2px solid black;\n    padding: 15px;\n    background-color: #b6baff14;\n    color: #7f86ff;\n    text-align: center;\n    font-family: inherit;\n    font-size: 17px;\n\n    &:hover,\n    &:focus {\n      background-color: #d3d5ff40;\n      outline: none;\n    }\n  }\n\n  button {\n    font-size: 20px;\n\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n    border-radius: 10px;\n    border: 0px solid black;\n    padding: 15px;\n    background-color: transparent;\n    &:hover {\n      cursor: pointer;\n      background-color: rgb(98, 91, 112);\n    }\n  }\n\n  ul {\n    padding: 15px;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 15px;\n\n    li {\n      text-align: center;\n      border-bottom: 2px solid white;\n      padding-bottom: 5px;\n    }\n\n    h3 {\n      margin-top: 15px;\n      text-shadow: 5px 5px 5px black;\n    }\n  }\n`;\n","import { findMovie } from 'services/API';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Div } from './Movies.styled';\nimport { FaSearch } from 'react-icons/fa';\nimport { imgSRC } from 'utils/imageHref';\n\nconst Movies = () => {\n  const [result, setResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query') || '';\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const search = e.target.elements.movie.value;\n    setSearchParams(search !== '' ? { query: search } : {});\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    findMovie(query).then(({ data: { results } }) => {\n      setResult(results);\n    });\n  }, [query]);\n\n  console.log('SEARCH RESULTS', result);\n\n  return (\n    <Div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movie\" />\n        <button type=\"submit\">\n          <FaSearch />\n        </button>\n      </form>\n\n      <ul>\n        {result.map(({ id, title, poster_path }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img src={imgSRC(poster_path)} alt={title} />\n              <h3>{title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=2d54f3365ed9e7717bfee9cb79f47a9c';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${baseURL}trending/movie/day?${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${baseURL}movie/${id}?${API_KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return axios.get(`${baseURL}movie/${id}/reviews?${API_KEY}`);\n};\n\nexport const getMovieCast = id => {\n  return axios.get(`${baseURL}movie/${id}/credits?${API_KEY}`);\n};\n\nexport const findMovie = query => {\n  return axios.get(`${baseURL}search/movie?${API_KEY}&query=${query}`);\n};\n","const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function imgSRC(id) {\n  return id\n    ? `${BASE_URL}${id}`\n    : 'https://www.pngkit.com/png/detail/26-262771_question-mark-pics-question-mark-hand-drawn.png';\n}\n"],"names":["Div","styled","useState","result","setResult","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","findMovie","then","results","data","console","log","onSubmit","e","preventDefault","search","target","elements","movie","value","type","name","map","id","title","poster_path","to","state","from","src","imgSRC","alt","baseURL","API_KEY","getTrendingMovies","axios","getMovieById","getMovieReviews","getMovieCast"],"sourceRoot":""}