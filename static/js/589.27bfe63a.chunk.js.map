{"version":3,"file":"static/js/589.27bfe63a.chunk.js","mappings":"wPAEaA,E,OAAMC,GAAAA,IAAH,k8C,kBC4FhB,EAhFsB,WAAO,IAAD,MAC1B,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,QAASP,IAErBQ,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GAASQ,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BV,EAASU,EACV,GACF,GAAE,CAACT,IAEJ,IAAQU,EAAuDZ,EAAvDY,MAAOC,EAAgDb,EAAhDa,YAAaC,EAAmCd,EAAnCc,OAAQC,EAA2Bf,EAA3Be,aAAcC,EAAahB,EAAbgB,SAGlD,OAFAV,QAAQC,IAAI,SAAUO,IAGpB,UAACjB,EAAD,YACE,UAAC,KAAD,CAAMoB,GAAE,UAAEb,EAASc,aAAX,aAAE,EAAgBC,KAAMC,UAAU,WAA1C,WACE,SAAC,MAAD,KACA,mDAGF,iBAAKA,UAAU,gBAAf,WACE,gBAAKC,KAAKC,EAAAA,EAAAA,GAAOT,GAAcU,IAAKX,KAEpC,iBAAKQ,UAAU,kBAAf,WACE,wBAAKR,KACL,cAAGQ,UAAU,WAAb,SAAyBJ,IACxBD,GACC,0BACE,yCADF,IACwBA,KAEtB,KAEG,OAAND,QAAM,IAANA,GAAAA,EAAQU,QACP,4BACE,cAAGJ,UAAU,eAAb,qBAEA,eAAIA,UAAU,SAAd,SACGN,EAAOW,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjB,OACE,eAAaP,UAAU,QAAvB,UACE,uBAAIO,KADGD,EAIZ,SAGH,MAEJ,gBAAIN,UAAU,QAAd,WACE,yBACE,SAAC,KAAD,CACEH,GAAI,OACJC,MAAO,CAAEC,KAAI,UAAEf,EAASc,aAAX,aAAE,EAAgBC,MAC/BC,UAAU,OAHZ,gCAQF,yBACE,SAAC,KAAD,CACEH,GAAI,UACJC,MAAO,CAAEC,KAAI,UAAEf,EAASc,aAAX,aAAE,EAAgBC,MAC/BC,UAAU,UAHZ,sCAYR,SAAC,EAAAQ,SAAD,WACE,SAAC,KAAD,QAIP,C,oKC1FKC,EAAU,gCACVC,EAAU,2CAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA0CC,GAClD,EAEYrB,EAAe,SAAAiB,GAC1B,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BH,EAA7B,YAAmCI,GAC3C,EAEYG,EAAkB,SAAAP,GAC7B,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BH,EAA7B,oBAA2CI,GACnD,EAEYI,EAAe,SAAAR,GAC1B,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BH,EAA7B,oBAA2CI,GACnD,EAEYK,EAAY,SAAAC,GACvB,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAAoCC,EAApC,kBAAqDM,GAC7D,C,sDCrBM,SAASd,EAAOI,GACrB,OAAOA,EAAE,UAHM,mCAGN,OACSA,GACd,6FACL,C","sources":["components/MoviesDetails/MoviesDetails.styled.js","components/MoviesDetails/MoviesDetails.jsx","services/API.js","utils/imageHref.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: grid;\n  grid-gap: 15px;\n  position: relative;\n\n  a {\n    &:hover,\n    &:focus {\n      background-color: #d3d5ff40;\n    }\n  }\n\n  .backLink {\n    position: fixed;\n    z-index: 1;\n    top: 10px;\n    right: 10px;\n    font-size: 20px;\n    border: 2px solid #d3d5ff40;\n    border-radius: 10px;\n    padding: 10px;\n    text-align: end;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    background-color: rgba(26, 26, 26, 65%);\n    color: white;\n\n    &:hover,\n    &:focus {\n      background-color: rgba(103, 102, 105, 100%);\n    }\n  }\n\n  img {\n    max-width: 300px;\n  }\n\n  .movie-details {\n    display: flex;\n    justify-content: space-between;\n    gap: 15px;\n\n    h2 {\n      text-align: center;\n      font-size: 54px;\n    }\n  }\n\n  .details-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n\n    .overview {\n      font-style: italic;\n    }\n\n    .genres-title {\n      font-weight: 700;\n    }\n  }\n\n  .links {\n    display: flex;\n    gap: 20px;\n    justify-content: space-around;\n\n    & a {\n      border-top: 2px solid rgba(103, 102, 105, 85%);\n      border-bottom: 2px solid rgba(103, 102, 105, 85%);\n      padding: 10px;\n      border-radius: 10px;\n\n      &.active {\n        background-color: rgba(72, 66, 84, 85%);\n        border: none;\n      }\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Outlet,\n  Link,\n  useLocation,\n  NavLink,\n} from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { getMovieById } from 'services/API';\nimport { imgSRC } from 'utils/imageHref';\nimport { Div } from './MoviesDetails.styled';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log('MOVIE', movie);\n\n  useEffect(() => {\n    getMovieById(movieId).then(({ data }) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  const { title, poster_path, genres, release_date, overview } = movie;\n  console.log('genres', genres);\n\n  return (\n    <Div>\n      <Link to={location.state?.from} className=\"backLink\">\n        <FaArrowLeft />\n        <span>Back to previous</span>\n      </Link>\n\n      <div className=\"movie-details\">\n        <img src={imgSRC(poster_path)} alt={title} />\n\n        <div className=\"details-wrapper\">\n          <h2>{title}</h2>\n          <p className=\"overview\">{overview}</p>\n          {release_date ? (\n            <p>\n              <b>Release date:</b> {release_date}\n            </p>\n          ) : null}\n\n          {genres?.length ? (\n            <div>\n              <p className=\"genres-title\">Genres</p>\n\n              <ul className=\"genres\">\n                {genres.map(({ id, name }) => {\n                  return (\n                    <li key={id} className=\"genre\">\n                      <p>{name}</p>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          ) : null}\n\n          <ul className=\"links\">\n            <li>\n              <NavLink\n                to={'cast'}\n                state={{ from: location.state?.from }}\n                className=\"cast\"\n              >\n                All cast & crew\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                to={'reviews'}\n                state={{ from: location.state?.from }}\n                className=\"reviews\"\n              >\n                User reviews\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=2d54f3365ed9e7717bfee9cb79f47a9c';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${baseURL}trending/movie/day?${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${baseURL}movie/${id}?${API_KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return axios.get(`${baseURL}movie/${id}/reviews?${API_KEY}`);\n};\n\nexport const getMovieCast = id => {\n  return axios.get(`${baseURL}movie/${id}/credits?${API_KEY}`);\n};\n\nexport const findMovie = query => {\n  return axios.get(`${baseURL}search/movie?${API_KEY}&query=${query}`);\n};\n","const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function imgSRC(id) {\n  return id\n    ? `${BASE_URL}${id}`\n    : 'https://www.pngkit.com/png/detail/26-262771_question-mark-pics-question-mark-hand-drawn.png';\n}\n"],"names":["Div","styled","useState","movie","setMovie","movieId","useParams","location","useLocation","console","log","useEffect","getMovieById","then","data","title","poster_path","genres","release_date","overview","to","state","from","className","src","imgSRC","alt","length","map","id","name","Suspense","baseURL","API_KEY","getTrendingMovies","axios","getMovieReviews","getMovieCast","findMovie","query"],"sourceRoot":""}