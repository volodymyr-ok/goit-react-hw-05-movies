{"version":3,"file":"static/js/589.fe6c41d1.chunk.js","mappings":"wPAEaA,E,OAAMC,GAAAA,IAAH,ihB,SCiDhB,EA5CsB,WAAO,IAAD,MAC1B,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,gBAAiBP,IAE7BQ,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GAASQ,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BV,EAASU,EACV,GACF,GAAE,CAACT,IAEJ,IAAQU,EAAuBZ,EAAvBY,MAAOC,EAAgBb,EAAhBa,YAEf,OACE,UAAChB,EAAD,YACE,SAAC,KAAD,CAAMiB,GAAE,UAAEV,EAASW,aAAX,aAAE,EAAgBC,KAA1B,+BAEA,iBAAKC,UAAU,eAAf,WACE,gBAAKC,KAAKC,EAAAA,EAAAA,GAAON,GAAcO,IAAKR,KACpC,wBAAKA,QAGP,2BACE,yBACE,SAAC,KAAD,CAAME,GAAI,OAAQC,MAAO,CAAEC,KAAI,UAAEZ,EAASW,aAAX,aAAE,EAAgBC,MAAjD,qBAIF,0BACG,KACD,SAAC,KAAD,CAAMF,GAAI,UAAWC,MAAO,CAAEC,KAAI,UAAEZ,EAASW,aAAX,aAAE,EAAgBC,MAApD,4BAMJ,SAAC,EAAAK,SAAD,WACE,SAAC,KAAD,QAIP,C,oKC/CKC,EAAU,gCACVC,EAAU,2CAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA0CC,GAClD,EAEYd,EAAe,SAAAiB,GAC1B,OAAOD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BI,EAA7B,YAAmCH,GAC3C,EAEYI,EAAkB,SAAAD,GAC7B,OAAOD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BI,EAA7B,oBAA2CH,GACnD,EAEYK,EAAe,SAAAF,GAC1B,OAAOD,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BI,EAA7B,oBAA2CH,GACnD,EAEYM,EAAY,SAAAC,GACvB,OAAOL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAAoCC,EAApC,kBAAqDO,GAC7D,C,sDCrBM,SAASX,EAAOO,GACrB,OAAOA,EAAE,UAHM,mCAGN,OAAiBA,GAAO,QAClC,C","sources":["components/MoviesDetails/MoviesDetails.styled.js","components/MoviesDetails/MoviesDetails.jsx","services/API.js","utils/imageHref.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  /* background-color: black; */\n  display: grid;\n  gap: 5px;\n  grid-template-columns: 25% 25% 50%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  a {\n    display: inline-block;\n    border: 2px solid black;\n    border-radius: 5px;\n    width: 200px;\n    padding: 10px;\n    /* margin: 5px; */\n    text-align: center;\n  }\n\n  img {\n    /* position: absolute;\n    top: 5px;\n    right: 5px; */\n    max-width: 350px;\n  }\n\n  .main-details {\n    display: flex;\n  }\n`;\n","import { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieById } from 'services/API';\nimport { Suspense } from 'react';\nimport { imgSRC } from 'utils/imageHref';\nimport { Div } from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log('MOVIE DETAILS', movie);\n\n  useEffect(() => {\n    getMovieById(movieId).then(({ data }) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  const { title, poster_path } = movie;\n\n  return (\n    <Div>\n      <Link to={location.state?.from}>Back to previous</Link>\n\n      <div className=\"main-details\">\n        <img src={imgSRC(poster_path)} alt={title} />\n        <h2>{title}</h2>\n      </div>\n\n      <ul>\n        <li>\n          <Link to={'cast'} state={{ from: location.state?.from }}>\n            cast\n          </Link>\n        </li>\n        <li>\n          {' '}\n          <Link to={'reviews'} state={{ from: location.state?.from }}>\n            reviews\n          </Link>\n        </li>\n      </ul>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=2d54f3365ed9e7717bfee9cb79f47a9c';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${baseURL}trending/movie/day?${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${baseURL}movie/${id}?${API_KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return axios.get(`${baseURL}movie/${id}/reviews?${API_KEY}`);\n};\n\nexport const getMovieCast = id => {\n  return axios.get(`${baseURL}movie/${id}/credits?${API_KEY}`);\n};\n\nexport const findMovie = query => {\n  return axios.get(`${baseURL}search/movie?${API_KEY}&query=${query}`);\n};\n","const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function imgSRC(id) {\n  return id ? `${BASE_URL}${id}` : 'no img';\n}\n"],"names":["Div","styled","useState","movie","setMovie","movieId","useParams","location","useLocation","console","log","useEffect","getMovieById","then","data","title","poster_path","to","state","from","className","src","imgSRC","alt","Suspense","baseURL","API_KEY","getTrendingMovies","axios","id","getMovieReviews","getMovieCast","findMovie","query"],"sourceRoot":""}